;
;Define the text that marks the start of segment definitions. This is searched
;for to make sure we start in the right place. Single space will do in place of
;multiple space/tab, only the words and the fact that they have a space
;is significant.
;
SegmentHeader=start stop length name class


;
;Define the layout of segment definitions. The names used are 386Prep variables.
;There is no relationship between this and SegmentHeader. Only Null, Start,
;Length & Class are currently defined. This tells 386Prep which column to find
;each piece of information.
;
SegmentFormat=Start Null Length Null Class



;
;Define CODE type class's. List of CLASS names that need to be defined as code
;execute/read segments. Multiple entries should be seperated by space.
;
CodeClass=*code*



;
;Define DATA type class's. List of CLASS names that need to be defined as data
;read/write segments. Multiple entries should be seperated by space.
;
DataClass=*bss*
DataClass=*data*




;
;Define STACK type class's. List of CLASS names that need to be defined as stack
;segments. Multiple entries should be seperated by space.
;
StackClass=*stack*



;
;Define CONST type class's. List of CLASS names that need to be defined as data
;read only segments. Multiple entries should be seperated by space.
;
ConstClass=*const*


;
;Define NEAR type class's. List of CLASS names that need to be defined as both
;code & data. Multiple entries should be seperated by space.
;
NearClass=*near*
